{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\n// import { recordDonationToGoogleSheet } from '@/ai/flows/googleSheetIntegration'; // Hypothetical import from AI flows\n\ninterface FormData {\n  [key: string]: any;\n}\n\nasync function simulateDatabaseOperation(operation: string, data: FormData) {\n  console.log(`Simulating ${operation} with data:`, data);\n  await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate network latency\n  // In a real app, you would interact with your database or AI flow here.\n  // For example: await recordDonationToGoogleSheet(data);\n  return { success: true, message: `${operation.split(' ')[0]} data recorded successfully.` };\n}\n\nexport async function recordThakurBhog(data: FormData) {\n  // Add validation here if needed using Zod or similar\n  // Example: const validatedData = ThakurBhogSchema.parse(data);\n  return simulateDatabaseOperation(\"Thakur Bhog Donation\", data);\n}\n\nexport async function recordSatsangSponsorship(data: FormData & { date: string }) {\n  // Simulate database operation\n  console.log(`Simulating Satsang Sponsorship with data:`, data);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  // In a real app, you'd save this to a database and confirm the date isn't already taken server-side.\n  return { success: true, message: \"Satsang Sponsorship data recorded successfully.\", bookedDate: data.date };\n}\n\nexport async function recordMaintenanceContribution(data: FormData) {\n  return simulateDatabaseOperation(\"Maintenance Contribution\", data);\n}\n\nexport async function requestWorkerAccess(data: { name: string, phone: string }) {\n  // This would typically involve more complex logic like notifying an admin.\n  console.log(\"Simulating Worker Access Request for:\", data);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return { success: true, message: \"Worker access request submitted. You will be notified upon approval.\" };\n}\n\nexport async function updateUserProfile(userId: string, data: Partial<FormData>) {\n  console.log(`Simulating update user profile for ${userId} with data:`, data);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return { success: true, message: \"Profile updated successfully.\" };\n}\n\n"],"names":[],"mappings":";;;;;;;;;;;;AASA,eAAe,0BAA0B,SAAiB,EAAE,IAAc;IACxE,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,UAAU,WAAW,CAAC,EAAE;IAClD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,QAAQ,2BAA2B;IACpF,wEAAwE;IACxE,wDAAwD;IACxD,OAAO;QAAE,SAAS;QAAM,SAAS,GAAG,UAAU,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,4BAA4B,CAAC;IAAC;AAC5F;AAEO,eAAe,uCAAc,GAAd,iBAAiB,IAAc;IACnD,qDAAqD;IACrD,+DAA+D;IAC/D,OAAO,0BAA0B,wBAAwB;AAC3D;AAEO,eAAe,uCAAsB,GAAtB,yBAAyB,IAAiC;IAC9E,8BAA8B;IAC9B,QAAQ,GAAG,CAAC,CAAC,yCAAyC,CAAC,EAAE;IACzD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,qGAAqG;IACrG,OAAO;QAAE,SAAS;QAAM,SAAS;QAAmD,YAAY,KAAK,IAAI;IAAC;AAC5G;AAEO,eAAe,uCAA2B,GAA3B,8BAA8B,IAAc;IAChE,OAAO,0BAA0B,4BAA4B;AAC/D;AAEO,eAAe,uCAAiB,GAAjB,oBAAoB,IAAqC;IAC7E,2EAA2E;IAC3E,QAAQ,GAAG,CAAC,yCAAyC;IACrD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,OAAO;QAAE,SAAS;QAAM,SAAS;IAAuE;AAC1G;AAEO,eAAe,uCAAe,GAAf,kBAAkB,MAAc,EAAE,IAAuB;IAC7E,QAAQ,GAAG,CAAC,CAAC,mCAAmC,EAAE,OAAO,WAAW,CAAC,EAAE;IACvE,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,OAAO;QAAE,SAAS;QAAM,SAAS;IAAgC;AACnE;;;IA7BsB;IAMA;IAQA;IAIA;IAOA;;AAzBA,+OAAA;AAMA,+OAAA;AAQA,+OAAA;AAIA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/donations/maintenance/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/donations/maintenance/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/donations/maintenance/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/donations/maintenance/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/donations/maintenance/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/donations/maintenance/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}